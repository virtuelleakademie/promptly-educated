---
title: "Using AI in Education: Intermediate"
description: |
  Basic prompting techniques.
# date: last-modified
date: 24 October, 2024
date-format: "DD MMM, YYYY"
author: 
  - name: Andrew Ellis
    url: https://github.com/awellis
    affiliation: Virtuelle Akademie, Berner Fachhochschule
    affiliation-url: https://virtuelleakademie.ch
    orcid: 0000-0002-2788-936X
license: CC BY
citation: true
bibliography: ../bibliography.bib
format:
    html:
        toc: true
        toc-depth: 4
        toc-expand: true
        code-fold: true
        code-link: true
        # callout-appearance: simple
        callout-icon: true
---

:::{.setup title="Pre-Workshop Setup"}

In this workshop, I recommend working with the following chatbots: 

| Chatbot | Description | Features |
|---------|--------------|----------|
| [Claude](https://claude.ai/) | Considered by many to be using the best LLMs for a variety of tasks, such as coding and general-purpose writing. | Artifacts (output in a single document), displays HTML, upload files |
| [ChatGPT](https://chatgpt.com) | The most popular chatbot, generally good for coding and writing. Its latest models are claimed to perform very well on reasoning tasks. | Web access, GPTs, Python code execution, Canvas, upload files |
| [HuggingChat](https://huggingface.co/chat/) | A chatbot that allows you to use a variety of different open-source LLMs, such as those based on Llama. It's free, but you need to create an account. | Web search, Calculator, Assistants |

## Preparation
You will need to create an account on each of these platforms. For Claude and ChatGPT, you will have to use your mobile number to verify your account.


## Additional Resources
- [Official Claude Documentation](https://www.anthropic.com/claude)
- [ChatGPT Documentation](https://platform.openai.com/docs/guides/chat)
- [HuggingFace Documentation](https://huggingface.co/docs/hub/index)

:::

# Workshop Overview

The workshop is divided into several blocks, each focusing on different aspects of LLM usage and prompt engineering. Here's a brief overview of the structure:

:::{.timing}
## Session Overview
- Opening Block (15 min)
- Foundations Block (45 min)
- Break (15 min)
- Intermediate Block (45 min)
- Implementation Block (20 min)
- Closing Block (30 min)
:::




# Opening Block (15 min)

:::{.setup title="Technical Setup"}
### Initial Setup (5 min)
- Login to LLM platforms
- Test access
- Quick troubleshooting
:::


## Opening Activity: The Wolf, Goat, and Cabbage Problem (10 min)

:::{.try title="Hands-On Practice"}
Enter the following prompt (Claude, ChatGPT or HuggingChat):

A farmer needs to transport a wolf, a goat, and a cabbage across a river using a small boat. The boat can carry only the farmer and one other item (either the wolf, the goat, or the cabbage) at a time. However, if left together without the farmer's supervision: The wolf will eat the goat, and the goat will eat the cabbage. The challenge is to figure out how the farmer can get all three items across the river safely.

:::

:::{.individual title="Individual Practice"}
1. Can you solve this task?
2. Can the LLM solve this task?
3. If not, why not?
:::

:::{.pair title="In pairs"}

- Discuss the output of the LLM
- Share your thoughts
:::

:::{.group title="In groups"}
- Based on your current knowledge of LLMs, what do you think is the problem?
- How could we modify the task description to make it easier for the LLM?
- What does this say about the capabilities of LLMs?
:::





# Foundation Block (45 min)

## Understanding Large Language Models (LLMs)

{{< revealjs file="../slides/understanding-llms.html" height="500px" class="ratio ratio-16x9" >}}


## Prompt Engineering Basics

{{< revealjs file="../slides/prompt-engineering-basics.html" height="500px" class="ratio ratio-16x9" >}}



## Progressive Revelation Activity

When working with LLMs, you will often find that you don't get the output you want straight away. Instead, you will need to iteratively refine your prompting.

:::{.individual title="Hands-On Practice"}
## Progressive Revelation Activity (15 min)

Step-by-step prompt building:

1. Start with basic prompt
2. Add role specification
3. Add context details
4. Add output formatting
5. Compare results at each stage
   
:::


:::{.prompt-example title="Step 1: Start with a basic prompt" collapse="true"}
## Step 1: Start with a basic prompt
Prompt: Write a short story about a person who finds a magic lamp.
:::

:::{.prompt-example title="Step 2: Add role specification" collapse="true"}
## Step 2: Add role specification
Prompt: You are a professional fiction writer. Write a short story about a person who finds a magic lamp.
:::

:::{.prompt-example title="Step 3: Add context details" collapse="true"}
## Step 3: Add context details
Prompt: You are a professional fiction writer. Write a short story (around 300 words) about a young woman named Sarah who finds an old, tarnished magic lamp while cleaning out her grandmother's attic. The story should be set in a modern, urban setting.
:::

:::{.prompt-example title="Step 4: Add output formatting" collapse="true"}
## Step 4: Add output formatting
Prompt: You are a professional fiction writer. Write a short story (around 300 words) about a young woman named Sarah who finds an old, tarnished magic lamp while cleaning out her grandmother's attic. The story should be set in a modern, urban setting. Format your response using Markdown, with a title and proper paragraphs.
:::

:::{.prompt-example title="Step 5: Compare results at each stage" collapse="true"}
## Step 5: Compare results at each stage
- How does the output change at each stage?
- What effect does each change have?
:::

:::{.pair title="In pairs"}
- Share your thoughts with your neighbour
:::



## Prompt Reverse-Engineering Exercise

:::{.individual title="Prompt Detective Exercise (15 min)"}
<!-- ## Prompt Detective Exercise (15 min) -->
1. Examine the outputs below and try to reconstruct the prompt that could have generated it.
2. Test your prompts with Claude, ChatGPT or HuggingChat and compare the output to the original.
:::

### Output 1:

| Element | Symbol | Atomic Number | Atomic Mass |
|---------|--------|----------------|-------------|
| Hydrogen | H | 1 | 1.008 |
| Helium | He | 2 | 4.003 |
| Lithium | Li | 3 | 6.941 |
| Beryllium | Be | 4 | 9.012 |
| Boron | B | 5 | 10.811 |
| Carbon | C | 6 | 12.011 |

:::




### Output 2:

| Greek Letter | Pronunciation | Example Usage |
|--------------|----------------|----------------|
| α (alpha)    | al-fah         | Used to represent the first letter of the Greek alphabet, or the first in a series. |
| β (beta)     | bay-tah        | Used in mathematics and science to represent various constants or coefficients. |
| γ (gamma)    | gam-ah         | Used in physics to represent the ratio of two quantities, or in mathematics as a function. |
| δ (delta)    | del-tah        | Used to represent a change or difference in a quantity, or as a symbol for a small increment. |
| ε (epsilon)  | ep-si-lon      | Used in mathematics to represent a small positive number, or in engineering to represent strain. |
| π (pi)       | pie            | Used to represent the ratio of a circle's circumference to its diameter, a fundamental constant in mathematics. |

:::

:::{.group title="Prompt Detective Exercise (15 min)"}
### Your Task:

1. Discuss with your group:
   - What elements did you include in your prompt?
   - How did your output differ from the original?
   - What changes could you make to your prompt to better match the desired output?
:::


# Break (15 min)

:::{.break title="Break Time"}
## Coffee Break

- Technical support available
:::



# Intermediate Block (45 min)

## Prompt Engineering Intermediate Techniques

{{< revealjs file="../slides/prompt-engineering-intermediate.html" height="500px" class="ratio ratio-16x9" >}}


## Error-First Learning Activity

:::{.try title="Learning from Mistakes"}

### Error-First Learning Activity (20 min)

Upload a research paper (ChatGPT, Claude or HuggingChat) and ask the chatbot to summarize it.

:::{.prompt-example title="Vague instructions" collapse="false"}
Write a summary of the following research paper.
:::

:::{.tip title="Potential improvements"}
Potential improvements:

- Specify what should be summarized (e.g. a book, article, etc.)
- Provide context about the topic or content
- Give guidance on the desired length or format of the summary

:::

:::{.prompt-example title="Missing Context" collapse="false"}

Prompt: Explain the concept of "machine learning" to an audience.
:::

:::{.tip title="Potential improvements"}
Potential improvements:

- Background information about the audience (e.g. technical expertise, age group, etc.)
- Desired level of technical depth or terminology
- Expected length or format of the explanation
:::

:::{.prompt-example title="Poor Formatting" collapse="false"}

Prompt: Provide a table with information about the first 10 elements of the periodic table, including their symbols, atomic numbers, and atomic masses.
:::

:::{.tip title="Potential improvements"}
Potential improvements:

- Specify the desired output format (e.g. table, bullet points, etc.)
- Clarify the order and arrangement of information
- Indicate any additional details needed (e.g. units, descriptions, etc.)
:::


For all of the scenarios above, attempt to improve the prompts and share your results with your neighbour.


:::{.individual title="Individual Practice"}

- Attempt to improve the prompts

:::

:::{.pair title="Discuss fixes"}
- Discuss fixes with your neighbour
:::
:::


## Prompt Surgery Workshop

:::{.group title="Collaborative Analysis"}
### Reducing hallucinations (10 min)
1. Examine problematic prompt
2. Diagnose issues
3. Apply fixes
4. Test and refine
5. Share successful strategies
:::


:::{.prompt-example title="Summarize research" collapse="false"}
Prompt: Summarize key findings on the development of metacognition and self-regulated learning strategies in children.
:::

:::{.output-example title="Output" collapse="true"}

# Key Findings on the Development of Metacognition and Self-Regulated Learning (SRL) Strategies in Children

## 1. Emergence of Metacognition
- **Early Development**: Metacognitive skills, such as the ability to monitor one’s own thinking and regulate learning, begin to emerge in early childhood. Children as young as 3-5 years old show some capacity for metacognitive thinking, though it is rudimentary.
- **Growth During School Years**: Between ages 7 and 12, children significantly improve their metacognitive skills, particularly their ability to reflect on their thinking and adjust learning strategies. This period marks the transition from implicit, intuitive metacognition to more explicit forms.
- **Continued Development into Adolescence**: Adolescents show greater sophistication in planning, monitoring, and evaluating their learning, reflecting the continued maturation of executive functions and cognitive control.

## 2. Components of Self-Regulated Learning
- **Planning**: The ability to set goals and plan learning strategies develops with age. Young children often need external guidance, but by late elementary school, they begin to adopt more autonomous strategies for planning their work.
- **Monitoring and Evaluation**: Young children struggle to accurately monitor their learning progress, often overestimating their understanding or skills. As they grow older, they become more accurate in assessing their learning, which is crucial for self-correction and improvement.
- **Control of Learning Strategies**: Children initially rely on simple strategies, such as repetition. Over time, they learn to apply more sophisticated strategies (e.g., elaboration, summarization), and they become more flexible in selecting strategies suited to different tasks.

## 3. Influences on Development
- **Cognitive Maturity**: The development of executive functions, such as working memory and cognitive flexibility, plays a vital role in enhancing metacognition and self-regulated learning skills.
- **Social and Environmental Factors**: Teachers, parents, and peers provide models and feedback that shape children's development of metacognitive and SRL strategies. Scaffolding and direct instruction from adults are especially helpful in the early stages.
- **Task Complexity and Experience**: Exposure to a variety of tasks, particularly those that challenge children’s cognitive limits, fosters the development of metacognitive strategies. Success in tasks requiring problem-solving or critical thinking accelerates metacognitive growth.

## 4. Challenges in Metacognitive Development
- **Overconfidence**: Younger children often exhibit overconfidence in their abilities, underestimating the difficulty of tasks and overestimating their understanding. This diminishes as they gain more experience and feedback.
- **Transfer of Skills**: While children may develop metacognitive strategies in specific contexts, transferring these skills to new, unfamiliar situations can be difficult. Explicit teaching and practice in various contexts enhance transferability.

## 5. Educational Implications
- **Instructional Approaches**: Instruction that encourages reflection, self-assessment, and the explicit teaching of learning strategies can accelerate metacognitive and SRL development. For example, teaching students how to set goals, self-monitor, and adjust strategies based on feedback improves their learning outcomes.
- **Role of Feedback**: Timely and specific feedback helps children refine their self-assessment skills and encourages them to adjust their learning strategies more effectively.
- **Technology and Tools**: Digital tools and adaptive learning platforms that provide real-time feedback and promote self-reflection can be particularly effective in helping children develop metacognitive and SRL skills.

In summary, the development of metacognition and self-regulated learning strategies is a gradual process that builds on both cognitive maturation and experience. With proper guidance and instruction, children become increasingly capable of managing and directing their own learning effectively.

:::

:::{.tip title="Potential improvements"}
Strategies to reduce hallucination include:

1. Providing relevant factual context from trusted sources.
2. Instructing the LLM to admit when it lacks knowledge about a topic.

The key is to carefully craft prompts and contexts that guide the LLM towards factual responses and away from hallucinating or making up information.
:::



# Implementation Block (30 min)

## Anki Flashcard Project

[Anki](https://apps.ankiweb.net/) is a powerful open-source flashcard program that uses the principles of spaced repetition and active recall to enhance learning and long-term retention. It presents flashcards at optimal intervals, adjusting the frequency of review based on the user's performance. This is thought to ensure that information is reinforced before it is forgotten.

One of the key strengths of Anki is its flexibility. Users can create their own decks of flashcards tailored to their specific learning needs, or they can download pre-made decks from shared repositories covering a vast array of subjects, from languages and vocabulary to complex medical terminology.

However, Anki requires a lot of manual work to create effective flashcards. In this workshop, we will use an LLM to generate the flashcards for us.


:::{.tip title="Anki Flashcard Project" collapse="false"}
The simplest type of Anki flashcard is a pair of text fields: a question and an answer (or a term and a definition).

Anki can import flashcards in a variety of formats, including Anki's native format, but also from a comma-separated values (CSV) file.

A CSV file is a text file that uses a comma to separate values. Each line of the file is a row, and each row has of one or more columns, separated by commas.

If we have the following list of terms and definitions:

| term | definition |
|------|------------|
| Metacognition | "The ability to think about one's own thinking processes" |
| Self-Regulated Learning | "The process of taking control of and evaluating one's own learning" |
| Executive Functions | "Higher-order cognitive processes like working memory and cognitive flexibility" |
| Scaffolding | "Support provided by teachers or peers to help students learn new skills" |

we can save these in a CSV file like this:
```
term,definition
Metacognition,"The ability to think about one's own thinking processes"
Self-Regulated Learning,"The process of taking control of and evaluating one's own learning"
Executive Functions,"Higher-order cognitive processes like working memory and cognitive flexibility"
Scaffolding,"Support provided by teachers or peers to help students learn new skills"
```


If we save the contents above in a file called `anki-flashcards.csv`, we can import them into Anki by selecting the `File -> Import... menu item.
:::


:::{.checkpoint title="Goal"}
The goal of this project is to create a set of flashcards based on your teaching material, and to save these in a CSV file that can be imported into Anki.
:::


:::{.individual title="Project Work"}
### Anki Flashcard Project - Phase 1 (10 min)
- Select teaching material
- Apply learned prompting techniques
- Create initial flashcard prompt
- Test and document results
:::

:::{.group title="Peer Review"}
### Group Refinement - Phase 2 (10 min)
- Form groups of 3-4
- Share and test prompts
- Peer review using checklist
- Refine based on feedback
:::

:::{.export title="Optional"}
### Export Phase - Phase 3 (10 min)
- Install Anki
- Test import process
- Troubleshoot issues
:::


# Closing Block (30 min)

## Optional AI and learning environments

{{< revealjs file="../slides/ai-learning-environments.html" height="500px" class="ratio ratio-16x9" >}}



## Final Wrap-Up

:::{.checkpoint title="Wrap-Up"}
### Final Review (5 min)
- Key takeaways
- Next steps

:::




# Further Resources

**Explore these prompt guides**.

@schulhoffPromptReportSystematic2024 provide a comprehensive overview of the current state of prompt engineering.

The following websites are excellent resources for learning about prompting:

:::{.callout-tip collapse="true"}
## Learn prompting: An comprehensive (and free) guide aimed at non-technical users.
{{< bi link >}} [Learn prompting](https://learnprompting.org/docs/intro)

```{=html}
<iframe src="https://learnprompting.org/docs/intro" width="100%" height="500px"></iframe>
``` 
:::



:::{.callout-tip collapse="true"}
## Prompting guide: A more technical guide to prompting
{{< bi link >}} [Prompting guide](https://www.promptingguide.ai/): **DAIR.AI** (Democratizing Artificial Intelligence Research, Education, and Technologies). The guide is licensed under an MIT license.

```{=html}
<iframe src="https://www.promptingguide.ai/" width="100%" height="500px"></iframe>
``` 
:::






<!-- 
:::{.callout-caution}
## Discussion 💬 

- What experiences did you have with prompting?
- Did you find any of the techniques particularly useful?
::: -->




